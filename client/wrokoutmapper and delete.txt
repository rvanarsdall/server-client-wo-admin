const workoutMapper = () => {
    return PaymentResponse.workouts.map((workout, index) => {
        return (
            <tr key={index}>
                <th scope="row">{workout.id}</th>
                <td>{workout.result}</td>
                <td>{workout.description}</td>
                <td>{workout.definition}</td>
                <td>
                    <Button color="warning">Update</Button>
                    <Button color="danger">Delete</Button>
                </td>
            </tr>
        )
    })
}

3.  For every workout object, we create a new table row.  React will throw a warning if we don't attach a unique key to repeated JSX elements (our <tr>s, in this case), so we use the index number of every workout as a unique identifier for that table row.  Check the React docs for more info.

th scope="row" will make that th only persist within the one row, otherwise we would end up with something like what we have at the top witht the # and results, etc

const deleteWorkout = (workout) => {
    fetch(`http://localhost4000/api/log/${workout.id}`, {
        method: 'DELETE',
        headers: new Headers ({
            'Content-Type': 'application/json',
            'Authorization': props.token
        })
    })
    .then(() => props.fetchWorkouts())
}